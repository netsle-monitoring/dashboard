[{"/home/amit/Desktop/netsle-frontend/src/index.js":"1","/home/amit/Desktop/netsle-frontend/src/state/store.js":"2","/home/amit/Desktop/netsle-frontend/src/App.js":"3","/home/amit/Desktop/netsle-frontend/src/state/reducers/index.js":"4","/home/amit/Desktop/netsle-frontend/src/pages/loadingAnimation.js":"5","/home/amit/Desktop/netsle-frontend/src/pages/login.js":"6","/home/amit/Desktop/netsle-frontend/src/pages/home.js":"7","/home/amit/Desktop/netsle-frontend/src/state/actions/user.actions.js":"8","/home/amit/Desktop/netsle-frontend/src/state/reducers/user.reducer.js":"9","/home/amit/Desktop/netsle-frontend/src/state/constants/user.constants.js":"10","/home/amit/Desktop/netsle-frontend/src/components/navbar.js":"11","/home/amit/Desktop/netsle-frontend/src/state/reducers/dashboard.reducer.js":"12","/home/amit/Desktop/netsle-frontend/src/state/constants/dashboard.constants.js":"13","/home/amit/Desktop/netsle-frontend/src/state/actions/dashboard.actions.js":"14","/home/amit/Desktop/netsle-frontend/src/service/api.js":"15"},{"size":344,"mtime":1609861875324,"results":"16","hashOfConfig":"17"},{"size":244,"mtime":1609861489660,"results":"18","hashOfConfig":"17"},{"size":2584,"mtime":1610104107604,"results":"19","hashOfConfig":"17"},{"size":297,"mtime":1610105264687,"results":"20","hashOfConfig":"17"},{"size":1271,"mtime":1610029293490,"results":"21","hashOfConfig":"17"},{"size":3049,"mtime":1610028740427,"results":"22","hashOfConfig":"17"},{"size":4793,"mtime":1610106285044,"results":"23","hashOfConfig":"17"},{"size":1492,"mtime":1610104077196,"results":"24","hashOfConfig":"17"},{"size":1358,"mtime":1610021607793,"results":"25","hashOfConfig":"17"},{"size":324,"mtime":1610046496846,"results":"26","hashOfConfig":"17"},{"size":2732,"mtime":1610029293490,"results":"27","hashOfConfig":"17"},{"size":1895,"mtime":1610105920699,"results":"28","hashOfConfig":"17"},{"size":486,"mtime":1610105157661,"results":"29","hashOfConfig":"17"},{"size":1376,"mtime":1610106078826,"results":"30","hashOfConfig":"17"},{"size":2227,"mtime":1610107319953,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"pnmd11",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/amit/Desktop/netsle-frontend/src/index.js",[],["68","69"],"/home/amit/Desktop/netsle-frontend/src/state/store.js",[],"/home/amit/Desktop/netsle-frontend/src/App.js",["70","71"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/home\";\nimport LoginPage from \"./pages/login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { refreshToken } from \"./state/actions/user.actions\";\nimport { useEffect } from \"react\";\nimport LoadingAnimation from \"./pages/loadingAnimation\";\nimport NavBar from \"./components/navbar\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const dispatch = useDispatch();\n  const refreshAssets = useSelector((state) => state.refreshToken.loginAssets);\n  const refreshStatus = useSelector((state) => state.refreshToken.status);\n  const localRefreshToken = localStorage.getItem(\"refreshToken\");\n  const localAccessToken = localStorage.getItem(\"accessToken\");\n\n  useEffect(() => {\n    if (refreshStatus === \"success\") {\n      localStorage.setItem(\"refreshToken\", refreshAssets.refreshToken);\n      localStorage.setItem(\"accessToken\", refreshAssets.accessToken);\n      localStorage.setItem(\"accessTokenExpiresOn\", refreshAssets.expiresOn);\n    } else if (refreshStatus === \"error\") {\n      console.log(\"There's an error in refresh\");\n      localStorage.removeItem(\"refreshToken\");\n      document.location.href = \"/login\";\n    }\n  }, [refreshStatus]);\n\n  let isTokenExpired =\n    (localStorage.getItem(\"accessTokenExpiresOn\") <\n      new Date().getTime() / 1000 &&\n      localStorage.getItem(\"accessToken\") !== null) ||\n    isNaN(localStorage.getItem(\"accessTokenExpiresOn\"));\n\n  useEffect(() => {\n    if ((isTokenExpired || !localAccessToken) && localRefreshToken) {\n      dispatch(refreshToken());\n    }\n  }, []);\n  if (!localRefreshToken) return <Redirect to=\"/login\" />;\n\n  if (refreshStatus !== \"success\" && isTokenExpired) {\n    return <LoadingAnimation />;\n  }\n  console.log(refreshStatus, isTokenExpired);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isTokenExpired || refreshStatus === \"success\" ? ( // check whether the access token is expired (that means we're fucked.)\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login/\" />\n        )\n      }\n    />\n  );\n};\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/login\" exactly component={LoginPage} />\n          <Route path=\"/\">\n            <div class=\"flex flex-col h-screen\">\n              <NavBar />\n              <PrivateRoute exactly path=\"/\" component={HomePage} />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/home/amit/Desktop/netsle-frontend/src/state/reducers/index.js",[],"/home/amit/Desktop/netsle-frontend/src/pages/loadingAnimation.js",["72"],"import React from \"react\";\nimport NavBar from \"../components/navbar\";\nimport { ReactComponent as NetsleLogo } from \"../logo.svg\";\nimport \"./loadingAnimation.css\";\n\nconst LoadingAnimation = () => {\n  return (\n    <div class=\"bg-gray-800 flex justify-center items-center flex-grow\">\n      <div className=\"mb-32\" style={{marginRight: 150}}>\n        <span\n          class=\"first_dot\"\n          style={{\n            position: \"absolute\",\n            width: 110,\n            marginTop: 20,\n            marginLeft: 20,\n            height: 110,\n            borderRadius: \"50%\",\n            backgroundColor: \"#fff\",\n            zIndex: 2,\n          }}\n        ></span>\n        <span\n          class=\"sec_dot\"\n          style={{\n            width: 150,\n            height: 150,\n            borderRadius: \"50%\",\n            backgroundColor: \"#bbb\",\n            position: \"absolute\",\n            zIndex: 1,\n          }}\n        ></span>\n        <NetsleLogo\n          className=\"loading\"\n          style={{\n            width: 140,\n            height: 140,\n            marginLeft: 5,\n            marginTop: 5,\n            color: \"white\",\n            position: \"absolute\",\n            zIndex: 3,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingAnimation;\n","/home/amit/Desktop/netsle-frontend/src/pages/login.js",["73"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../state/actions/user.actions\";\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const loginStatus = useSelector((state) => state.authentication.status);\n  const loginError = useSelector((state) => state.authentication.error);\n  const loginAssets = useSelector((state) => state.authentication.loginAssets);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  let onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(login(username, password));\n  };\n\n  // TODO: Rethink about this one, maybe it should be somewhere else\n  // more generic? for example work in other places of the code globally\n  // TODO: Rethink about the security of the matter, localStorage bad cookies good :)\n  useEffect(() => {\n    if (loginStatus === \"success\") {\n      localStorage.setItem(\"refreshToken\", loginAssets.refreshToken);\n      localStorage.setItem(\"accessToken\", loginAssets.accessToken);\n      localStorage.setItem(\"accessTokenExpiresOn\", loginAssets.expiresOn);\n\n      document.location.href = \"/\";\n    }\n  }, [loginStatus]);\n\n  return (\n    <div class=\"flex h-screen bg-gray-800\">\n      <div className=\"m-auto\">\n        <p className=\"text-xl font-bold text-white\">Netsle Dashboard.</p>\n        <form\n          className=\"bg-white shadow-md rounded px-32 pt-6 pb-8 mb-4\"\n          onSubmit={onSubmit}\n        >\n          <div>\n            <label\n              class=\"block text-gray-700 text-sm font-bold mb-2\"\n              for=\"username\"\n            >\n              Username\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 mb-4 text-gray-700 focus:outline-none focus:shadow-outline\"\n              id=\"username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => setUsername(e.target.value)}\n            ></input>\n            <label\n              class=\"block text-gray-700 text-sm font-bold mb-2\"\n              for=\"password\"\n            >\n              Password\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"text\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            <button\n              className=\"bg-gray-800 hover:bg-gray-700 text-white font-bold py-2 px-4 mt-4 rounded\"\n              type=\"submit\"\n            >\n              submit\n            </button>\n          </div>\n        </form>\n        {\n          loginStatus === \"error\" && (\n            <div class=\"shadow-md bg-red-500 rounded border-2 border-red-400 text-white\">\n              <p class=\"font-bold text-xl\">{loginError}</p>\n            </div>\n          )\n        }\n\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/home/amit/Desktop/netsle-frontend/src/pages/home.js",["74","75","76"],"/home/amit/Desktop/netsle-frontend/src/state/actions/user.actions.js",["77"],"import {\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGIN_REQUEST,\n  REFRESH_TOKEN_FAILURE,\n  REFRESH_TOKEN_REQUEST,\n  REFRESH_TOKEN_SUCCESS,\n} from \"../constants/user.constants\";\nimport ApiService from '../../service/api';\nimport { stringify } from \"querystring\";\n\nexport function login(username, password) {\n  return async (dispatch) => {\n    dispatch(request());\n    try {\n      let body = await ApiService.login(username, password);\n      dispatch(success(body));\n    } catch (e) {\n      dispatch(failure(e.message));\n    }\n  };\n\n  function request() {\n    return { type: LOGIN_REQUEST };\n  }\n\n  function success({\n    access_token: accessToken,\n    expiry: expiresOn,\n    refresh_token: refreshToken,\n  }) {\n    return { type: LOGIN_SUCCESS, accessToken, expiresOn, refreshToken };\n  }\n\n  function failure(error) {\n    return { type: LOGIN_FAILURE, error };\n  }\n}\n\nexport function refreshToken() {\n  return async (dispatch) => {\n    dispatch(request());\n    try {\n      let body = await ApiService.refresh();\n      dispatch(success(body));\n    } catch (e) {\n      dispatch(failure(e.message));\n    }\n  };\n\n  function request() {\n    return { type: REFRESH_TOKEN_REQUEST };\n  }\n\n  function success({\n    access_token: accessToken,\n    expiry: expiresOn,\n    refresh_token: refreshToken,\n  }) {\n    return {\n      type: REFRESH_TOKEN_SUCCESS,\n      accessToken,\n      expiresOn,\n      refreshToken,\n    };\n  }\n\n  function failure(error) {\n    return { type: REFRESH_TOKEN_FAILURE, error };\n  }\n}\n","/home/amit/Desktop/netsle-frontend/src/state/reducers/user.reducer.js",[],"/home/amit/Desktop/netsle-frontend/src/state/constants/user.constants.js",[],"/home/amit/Desktop/netsle-frontend/src/components/navbar.js",["78","79","80"],"import { ReactComponent as NetsleLogo } from \"../logo.svg\";\nconst NavBar = () => {\n    return (\n        <nav class=\"relative items-center justify-between px-2 py-3 navbar-expand-lg bg-gray-800 shadow-md\">\n        <div class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n          <div class=\"w-full relative flex justify-between lg:w-auto  px-4 lg:static lg:block lg:justify-start\">\n            <div className=\"grid grid-cols-2 gap-0\">\n              <div className=\"col-span-1 mt-2 ml-5\">\n                <NetsleLogo\n                  className=\"loading\"\n                  color=\"white\"\n                  style={{\n                    color: \"white\",\n                    width: 20,\n                    height: 20,\n                  }}\n                />\n              </div>\n              <a\n                class=\"row-span-1 text-sm font-bold leading-relaxed inline-block  py-2 whitespace-no-wrap uppercase text-white\"\n                href=\"#pablo\"\n              >\n                Netsle\n              </a>\n            </div>\n            <button\n              class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n            >\n              <span class=\"block relative w-6 h-px rounded-sm bg-white\"></span>\n              <span class=\"block relative w-6 h-px rounded-sm bg-white mt-1\"></span>\n              <span class=\"block relative w-6 h-px rounded-sm bg-white mt-1\"></span>\n            </button>\n          </div>\n          <div\n            class=\"lg:flex flex-grow items-center\"\n            id=\"example-navbar-warning\"\n          >\n            <ul class=\"flex flex-col lg:flex-row list-none ml-auto\">\n              <li class=\"nav-item\">\n                <a\n                  class=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#\"\n                >\n                  Discover\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#\"\n                >\n                  Profile\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#\"\n                >\n                  Setting\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n}\n\nexport default NavBar;","/home/amit/Desktop/netsle-frontend/src/state/reducers/dashboard.reducer.js",[],"/home/amit/Desktop/netsle-frontend/src/state/constants/dashboard.constants.js",[],"/home/amit/Desktop/netsle-frontend/src/state/actions/dashboard.actions.js",[],"/home/amit/Desktop/netsle-frontend/src/service/api.js",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":32,"column":6,"nodeType":"88","endLine":32,"endColumn":21,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":44,"column":6,"nodeType":"88","endLine":44,"endColumn":8,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"96","line":30,"column":6,"nodeType":"88","endLine":30,"endColumn":19,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"98","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":24},{"ruleId":"92","severity":1,"message":"99","line":20,"column":9,"nodeType":"94","messageId":"95","endLine":20,"endColumn":26},{"ruleId":"86","severity":1,"message":"100","line":32,"column":6,"nodeType":"88","endLine":32,"endColumn":8,"suggestions":"101"},{"ruleId":"92","severity":1,"message":"102","line":10,"column":10,"nodeType":"94","messageId":"95","endLine":10,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":41,"column":17,"nodeType":"105","endLine":44,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":49,"column":17,"nodeType":"105","endLine":52,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":57,"column":17,"nodeType":"105","endLine":60,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":76,"column":9,"nodeType":"108","messageId":"109","endLine":76,"endColumn":58},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'refreshAssets.accessToken', 'refreshAssets.expiresOn', and 'refreshAssets.refreshToken'. Either include them or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has missing dependencies: 'dispatch', 'isTokenExpired', 'localAccessToken', and 'localRefreshToken'. Either include them or remove the dependency array.",["113"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'loginAssets.accessToken', 'loginAssets.expiresOn', and 'loginAssets.refreshToken'. Either include them or remove the dependency array.",["114"],"'LoadingAnimation' is defined but never used.","'packetCountStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["115"],"'stringify' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [refreshAssets.accessToken, refreshAssets.expiresOn, refreshAssets.refreshToken, refreshStatus]",{"range":"124","text":"125"},"Update the dependencies array to be: [dispatch, isTokenExpired, localAccessToken, localRefreshToken]",{"range":"126","text":"127"},"Update the dependencies array to be: [loginAssets.accessToken, loginAssets.expiresOn, loginAssets.refreshToken, loginStatus]",{"range":"128","text":"129"},"Update the dependencies array to be: [dispatch]",{"range":"130","text":"131"},[1282,1297],"[refreshAssets.accessToken, refreshAssets.expiresOn, refreshAssets.refreshToken, refreshStatus]",[1659,1661],"[dispatch, isTokenExpired, localAccessToken, localRefreshToken]",[1193,1206],"[loginAssets.accessToken, loginAssets.expiresOn, loginAssets.refreshToken, loginStatus]",[1134,1136],"[dispatch]"]