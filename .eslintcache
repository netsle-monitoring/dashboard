[{"/home/amit/Desktop/netsle-frontend/src/index.js":"1","/home/amit/Desktop/netsle-frontend/src/state/store.js":"2","/home/amit/Desktop/netsle-frontend/src/App.js":"3","/home/amit/Desktop/netsle-frontend/src/state/reducers/index.js":"4","/home/amit/Desktop/netsle-frontend/src/pages/loadingAnimation.js":"5","/home/amit/Desktop/netsle-frontend/src/pages/login.js":"6","/home/amit/Desktop/netsle-frontend/src/pages/home.js":"7","/home/amit/Desktop/netsle-frontend/src/state/actions/user.actions.js":"8","/home/amit/Desktop/netsle-frontend/src/state/reducers/user.reducer.js":"9","/home/amit/Desktop/netsle-frontend/src/state/constants/user.constants.js":"10","/home/amit/Desktop/netsle-frontend/src/components/navbar.js":"11","/home/amit/Desktop/netsle-frontend/src/state/reducers/dashboard.reducer.js":"12","/home/amit/Desktop/netsle-frontend/src/state/constants/dashboard.constants.js":"13","/home/amit/Desktop/netsle-frontend/src/state/actions/dashboard.actions.js":"14"},{"size":344,"mtime":1609861875324,"results":"15","hashOfConfig":"16"},{"size":244,"mtime":1609861489660,"results":"17","hashOfConfig":"16"},{"size":2620,"mtime":1610030083808,"results":"18","hashOfConfig":"16"},{"size":242,"mtime":1610046613341,"results":"19","hashOfConfig":"16"},{"size":1271,"mtime":1610029293490,"results":"20","hashOfConfig":"16"},{"size":3049,"mtime":1610028740427,"results":"21","hashOfConfig":"16"},{"size":4613,"mtime":1610101673056,"results":"22","hashOfConfig":"16"},{"size":2050,"mtime":1610021607793,"results":"23","hashOfConfig":"16"},{"size":1358,"mtime":1610021607793,"results":"24","hashOfConfig":"16"},{"size":324,"mtime":1610046496846,"results":"25","hashOfConfig":"16"},{"size":2732,"mtime":1610029293490,"results":"26","hashOfConfig":"16"},{"size":926,"mtime":1610046938393,"results":"27","hashOfConfig":"16"},{"size":230,"mtime":1610046592009,"results":"28","hashOfConfig":"16"},{"size":1018,"mtime":1610100093738,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"pnmd11",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/amit/Desktop/netsle-frontend/src/index.js",[],["64","65"],"/home/amit/Desktop/netsle-frontend/src/state/store.js",[],"/home/amit/Desktop/netsle-frontend/src/App.js",["66","67"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/home\";\nimport LoginPage from \"./pages/login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { refreshToken } from \"./state/actions/user.actions\";\nimport { useEffect } from \"react\";\nimport LoadingAnimation from \"./pages/loadingAnimation\";\nimport NavBar from \"./components/navbar\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const dispatch = useDispatch();\n  const refreshAssets = useSelector((state) => state.refreshToken.loginAssets);\n  const refreshStatus = useSelector((state) => state.refreshToken.status);\n  const localRefreshToken = localStorage.getItem(\"refreshToken\");\n  const localAccessToken = localStorage.getItem(\"accessToken\");\n\n  useEffect(() => {\n    if (refreshStatus === \"success\") {\n      localStorage.setItem(\"refreshToken\", refreshAssets.refreshToken);\n      localStorage.setItem(\"accessToken\", refreshAssets.accessToken);\n      localStorage.setItem(\"accessTokenExpiresOn\", refreshAssets.expiresOn);\n    } else if (refreshStatus === \"error\") {\n      console.log(\"There's an error in refresh\");\n      localStorage.removeItem(\"refreshToken\");\n      document.location.href = \"/login\";\n    }\n  }, [refreshStatus]);\n\n  let isTokenExpired =\n    (localStorage.getItem(\"accessTokenExpiresOn\") <\n      new Date().getTime() / 1000 &&\n      localStorage.getItem(\"accessToken\") !== null) ||\n    isNaN(localStorage.getItem(\"accessTokenExpiresOn\"));\n\n  useEffect(() => {\n    if ((isTokenExpired || !localAccessToken) && localRefreshToken) {\n      dispatch(refreshToken(localStorage.getItem(\"refreshToken\")));\n    }\n  }, []);\n  if (!localRefreshToken) return <Redirect to=\"/login\" />;\n\n  if (refreshStatus !== \"success\" && isTokenExpired) {\n    return <LoadingAnimation />;\n  }\n  console.log(refreshStatus, isTokenExpired);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isTokenExpired || refreshStatus === \"success\" ? ( // check whether the access token is expired (that means we're fucked.)\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login/\" />\n        )\n      }\n    />\n  );\n};\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/login\" exactly component={LoginPage} />\n          <Route path=\"/\">\n            <div class=\"flex flex-col h-screen\">\n              <NavBar />\n              <PrivateRoute exactly path=\"/\" component={HomePage} />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/home/amit/Desktop/netsle-frontend/src/state/reducers/index.js",[],"/home/amit/Desktop/netsle-frontend/src/pages/loadingAnimation.js",["68"],"import React from \"react\";\nimport NavBar from \"../components/navbar\";\nimport { ReactComponent as NetsleLogo } from \"../logo.svg\";\nimport \"./loadingAnimation.css\";\n\nconst LoadingAnimation = () => {\n  return (\n    <div class=\"bg-gray-800 flex justify-center items-center flex-grow\">\n      <div className=\"mb-32\" style={{marginRight: 150}}>\n        <span\n          class=\"first_dot\"\n          style={{\n            position: \"absolute\",\n            width: 110,\n            marginTop: 20,\n            marginLeft: 20,\n            height: 110,\n            borderRadius: \"50%\",\n            backgroundColor: \"#fff\",\n            zIndex: 2,\n          }}\n        ></span>\n        <span\n          class=\"sec_dot\"\n          style={{\n            width: 150,\n            height: 150,\n            borderRadius: \"50%\",\n            backgroundColor: \"#bbb\",\n            position: \"absolute\",\n            zIndex: 1,\n          }}\n        ></span>\n        <NetsleLogo\n          className=\"loading\"\n          style={{\n            width: 140,\n            height: 140,\n            marginLeft: 5,\n            marginTop: 5,\n            color: \"white\",\n            position: \"absolute\",\n            zIndex: 3,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingAnimation;\n","/home/amit/Desktop/netsle-frontend/src/pages/login.js",["69"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../state/actions/user.actions\";\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const loginStatus = useSelector((state) => state.authentication.status);\n  const loginError = useSelector((state) => state.authentication.error);\n  const loginAssets = useSelector((state) => state.authentication.loginAssets);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  let onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(login(username, password));\n  };\n\n  // TODO: Rethink about this one, maybe it should be somewhere else\n  // more generic? for example work in other places of the code globally\n  // TODO: Rethink about the security of the matter, localStorage bad cookies good :)\n  useEffect(() => {\n    if (loginStatus === \"success\") {\n      localStorage.setItem(\"refreshToken\", loginAssets.refreshToken);\n      localStorage.setItem(\"accessToken\", loginAssets.accessToken);\n      localStorage.setItem(\"accessTokenExpiresOn\", loginAssets.expiresOn);\n\n      document.location.href = \"/\";\n    }\n  }, [loginStatus]);\n\n  return (\n    <div class=\"flex h-screen bg-gray-800\">\n      <div className=\"m-auto\">\n        <p className=\"text-xl font-bold text-white\">Netsle Dashboard.</p>\n        <form\n          className=\"bg-white shadow-md rounded px-32 pt-6 pb-8 mb-4\"\n          onSubmit={onSubmit}\n        >\n          <div>\n            <label\n              class=\"block text-gray-700 text-sm font-bold mb-2\"\n              for=\"username\"\n            >\n              Username\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 mb-4 text-gray-700 focus:outline-none focus:shadow-outline\"\n              id=\"username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => setUsername(e.target.value)}\n            ></input>\n            <label\n              class=\"block text-gray-700 text-sm font-bold mb-2\"\n              for=\"password\"\n            >\n              Password\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"text\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            <button\n              className=\"bg-gray-800 hover:bg-gray-700 text-white font-bold py-2 px-4 mt-4 rounded\"\n              type=\"submit\"\n            >\n              submit\n            </button>\n          </div>\n        </form>\n        {\n          loginStatus === \"error\" && (\n            <div class=\"shadow-md bg-red-500 rounded border-2 border-red-400 text-white\">\n              <p class=\"font-bold text-xl\">{loginError}</p>\n            </div>\n          )\n        }\n\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/home/amit/Desktop/netsle-frontend/src/pages/home.js",["70","71","72"],"/home/amit/Desktop/netsle-frontend/src/state/actions/user.actions.js",["73","74","75"],"import {\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGIN_REQUEST,\n  REFRESH_TOKEN_FAILURE,\n  REFRESH_TOKEN_REQUEST,\n  REFRESH_TOKEN_SUCCESS,\n} from \"../constants/user.constants\";\n\nimport { stringify } from \"querystring\";\n\nexport function login(username, password) {\n  return (dispatch) => {\n    dispatch(request());\n    fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      body: stringify({ username, password }),\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then((res) => {\n        if (res.status === 400) throw \"Invalid Credentials.\";\n        return res.json();\n      })\n      .then((body) => {\n        dispatch(success(body));\n      })\n      .catch((e) => dispatch(failure(e)));\n  };\n\n  function request() {\n    return { type: LOGIN_REQUEST };\n  }\n\n  function success({\n    access_token: accessToken,\n    expiry: expiresOn,\n    refresh_token: refreshToken,\n  }) {\n    return { type: LOGIN_SUCCESS, accessToken, expiresOn, refreshToken };\n  }\n\n  function failure(error) {\n    return { type: LOGIN_FAILURE, error };\n  }\n}\n\nexport function refreshToken(token) {\n  return (dispatch) => {\n    dispatch(request());\n    fetch(\"http://localhost:8000/refresh_token\", {\n      method: \"POST\",\n      body: \"\",\n      headers: {\n        \"Refresh-Token\": token,\n      },\n    })\n      .then((res) => {\n        if (res.status === 400) throw \"Invalid Token.\";\n        if (res.status === 403) throw \"Expired Token.\";\n        return res.json();\n      })\n      .then((body) => {\n        setTimeout(() => {\n          dispatch(success(body));\n        }, 5000)\n      })\n      .catch((e) => dispatch(failure(e)));\n  };\n\n  function request() {\n    return { type: REFRESH_TOKEN_REQUEST };\n  }\n\n  function success({\n    access_token: accessToken,\n    expiry: expiresOn,\n    refresh_token: refreshToken,\n  }) {\n    return {\n      type: REFRESH_TOKEN_SUCCESS,\n      accessToken,\n      expiresOn,\n      refreshToken,\n    };\n  }\n\n  function failure(error) {\n    return { type: REFRESH_TOKEN_FAILURE, error };\n  }\n}\n","/home/amit/Desktop/netsle-frontend/src/state/reducers/user.reducer.js",[],"/home/amit/Desktop/netsle-frontend/src/state/constants/user.constants.js",[],"/home/amit/Desktop/netsle-frontend/src/components/navbar.js",["76","77","78"],"import { ReactComponent as NetsleLogo } from \"../logo.svg\";\nconst NavBar = () => {\n    return (\n        <nav class=\"relative items-center justify-between px-2 py-3 navbar-expand-lg bg-gray-800 shadow-md\">\n        <div class=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n          <div class=\"w-full relative flex justify-between lg:w-auto  px-4 lg:static lg:block lg:justify-start\">\n            <div className=\"grid grid-cols-2 gap-0\">\n              <div className=\"col-span-1 mt-2 ml-5\">\n                <NetsleLogo\n                  className=\"loading\"\n                  color=\"white\"\n                  style={{\n                    color: \"white\",\n                    width: 20,\n                    height: 20,\n                  }}\n                />\n              </div>\n              <a\n                class=\"row-span-1 text-sm font-bold leading-relaxed inline-block  py-2 whitespace-no-wrap uppercase text-white\"\n                href=\"#pablo\"\n              >\n                Netsle\n              </a>\n            </div>\n            <button\n              class=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n            >\n              <span class=\"block relative w-6 h-px rounded-sm bg-white\"></span>\n              <span class=\"block relative w-6 h-px rounded-sm bg-white mt-1\"></span>\n              <span class=\"block relative w-6 h-px rounded-sm bg-white mt-1\"></span>\n            </button>\n          </div>\n          <div\n            class=\"lg:flex flex-grow items-center\"\n            id=\"example-navbar-warning\"\n          >\n            <ul class=\"flex flex-col lg:flex-row list-none ml-auto\">\n              <li class=\"nav-item\">\n                <a\n                  class=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#\"\n                >\n                  Discover\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#\"\n                >\n                  Profile\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#\"\n                >\n                  Setting\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n}\n\nexport default NavBar;","/home/amit/Desktop/netsle-frontend/src/state/reducers/dashboard.reducer.js",[],"/home/amit/Desktop/netsle-frontend/src/state/constants/dashboard.constants.js",[],"/home/amit/Desktop/netsle-frontend/src/state/actions/dashboard.actions.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":32,"column":6,"nodeType":"85","endLine":32,"endColumn":21,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":44,"column":6,"nodeType":"85","endLine":44,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"93","line":30,"column":6,"nodeType":"85","endLine":30,"endColumn":19,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":24},{"ruleId":"89","severity":1,"message":"96","line":20,"column":9,"nodeType":"91","messageId":"92","endLine":20,"endColumn":26},{"ruleId":"83","severity":1,"message":"97","line":28,"column":6,"nodeType":"85","endLine":28,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":33,"nodeType":"101","messageId":"102","endLine":23,"endColumn":62},{"ruleId":"99","severity":1,"message":"100","line":60,"column":33,"nodeType":"101","messageId":"102","endLine":60,"endColumn":56},{"ruleId":"99","severity":1,"message":"100","line":61,"column":33,"nodeType":"101","messageId":"102","endLine":61,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":41,"column":17,"nodeType":"105","endLine":44,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":49,"column":17,"nodeType":"105","endLine":52,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":57,"column":17,"nodeType":"105","endLine":60,"endColumn":18},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'refreshAssets.accessToken', 'refreshAssets.expiresOn', and 'refreshAssets.refreshToken'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has missing dependencies: 'dispatch', 'isTokenExpired', 'localAccessToken', and 'localRefreshToken'. Either include them or remove the dependency array.",["109"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'loginAssets.accessToken', 'loginAssets.expiresOn', and 'loginAssets.refreshToken'. Either include them or remove the dependency array.",["110"],"'LoadingAnimation' is defined but never used.","'packetCountStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["111"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [refreshAssets.accessToken, refreshAssets.expiresOn, refreshAssets.refreshToken, refreshStatus]",{"range":"120","text":"121"},"Update the dependencies array to be: [dispatch, isTokenExpired, localAccessToken, localRefreshToken]",{"range":"122","text":"123"},"Update the dependencies array to be: [loginAssets.accessToken, loginAssets.expiresOn, loginAssets.refreshToken, loginStatus]",{"range":"124","text":"125"},"Update the dependencies array to be: [dispatch]",{"range":"126","text":"127"},[1282,1297],"[refreshAssets.accessToken, refreshAssets.expiresOn, refreshAssets.refreshToken, refreshStatus]",[1695,1697],"[dispatch, isTokenExpired, localAccessToken, localRefreshToken]",[1193,1206],"[loginAssets.accessToken, loginAssets.expiresOn, loginAssets.refreshToken, loginStatus]",[970,972],"[dispatch]"]