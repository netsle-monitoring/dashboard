[{"/home/amit/Desktop/netsle-frontend/src/index.js":"1","/home/amit/Desktop/netsle-frontend/src/App.js":"2","/home/amit/Desktop/netsle-frontend/src/state/store.js":"3","/home/amit/Desktop/netsle-frontend/src/state/reducers/index.js":"4","/home/amit/Desktop/netsle-frontend/src/pages/login.js":"5","/home/amit/Desktop/netsle-frontend/src/state/reducers/user.reducer.js":"6","/home/amit/Desktop/netsle-frontend/src/state/constants/user.constants.js":"7","/home/amit/Desktop/netsle-frontend/src/state/actions/user.actions.js":"8","/home/amit/Desktop/netsle-frontend/src/pages/home.js":"9","/home/amit/Desktop/netsle-frontend/src/pages/loadingAnimation.js":"10"},{"size":344,"mtime":1609861875324,"results":"11","hashOfConfig":"12"},{"size":2327,"mtime":1609875388810,"results":"13","hashOfConfig":"12"},{"size":244,"mtime":1609861489660,"results":"14","hashOfConfig":"12"},{"size":176,"mtime":1609869656704,"results":"15","hashOfConfig":"12"},{"size":3049,"mtime":1609876054377,"results":"16","hashOfConfig":"12"},{"size":1358,"mtime":1609876017380,"results":"17","hashOfConfig":"12"},{"size":324,"mtime":1609869329726,"results":"18","hashOfConfig":"12"},{"size":2004,"mtime":1609875224373,"results":"19","hashOfConfig":"12"},{"size":2824,"mtime":1609877501950,"results":"20","hashOfConfig":"12"},{"size":1296,"mtime":1609875135401,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pnmd11",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/amit/Desktop/netsle-frontend/src/index.js",[],["45","46"],"/home/amit/Desktop/netsle-frontend/src/App.js",["47","48"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/home\";\nimport LoginPage from \"./pages/login\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport { refreshToken } from \"./state/actions/user.actions\";\nimport { useEffect } from \"react\";\nimport LoadingAnimation from \"./pages/loadingAnimation\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const dispatch = useDispatch();\n  const refreshAssets = useSelector((state) => state.refreshToken.loginAssets);\n  const refreshStatus = useSelector((state) => state.refreshToken.status);\n  const localRefreshToken = localStorage.getItem(\"refreshToken\");\n  const localAccessToken = localStorage.getItem(\"accessToken\");\n\n  useEffect(() => {\n    if (refreshStatus === \"success\") {\n      localStorage.setItem(\"refreshToken\", refreshAssets.refreshToken);\n      localStorage.setItem(\"accessToken\", refreshAssets.accessToken);\n      localStorage.setItem(\"accessTokenExpiresOn\", refreshAssets.expiresOn);\n\n    } else if (refreshStatus === \"error\") {\n      console.log(\"There's an error in refresh\");\n      document.location.href = \"/login\";\n    }\n  }, [refreshStatus]);\n\n  let isTokenExpired = ((localStorage.getItem(\"accessTokenExpiresOn\") < new Date().getTime() / 1000) \n  && (localStorage.getItem(\"accessToken\") !== null) )\n  || isNaN(localStorage.getItem(\"accessTokenExpiresOn\"));\n\n  useEffect(() => {\n    if ((isTokenExpired || !localAccessToken) && localRefreshToken ) {\n      dispatch(refreshToken(localStorage.getItem(\"refreshToken\")));\n    }\n  }, []);\n  console.log(\"Token expired?\", isTokenExpired);\n  if (!localRefreshToken) return <Redirect to=\"/login\"/>;\n\n\n  if (refreshStatus !== \"success\" && isTokenExpired) {\n    return <LoadingAnimation/>;\n  }\n\n  return <Route\n    {...rest}\n    render={(props) =>\n      !isTokenExpired || refreshStatus === \"success\" ? ( // check whether the access token is expired (that means we're fucked.)\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login/\" />\n      )\n    }\n  />;\n};\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <PrivateRoute path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/amit/Desktop/netsle-frontend/src/state/store.js",[],"/home/amit/Desktop/netsle-frontend/src/state/reducers/index.js",[],"/home/amit/Desktop/netsle-frontend/src/pages/login.js",["49"],"/home/amit/Desktop/netsle-frontend/src/state/reducers/user.reducer.js",[],"/home/amit/Desktop/netsle-frontend/src/state/constants/user.constants.js",[],"/home/amit/Desktop/netsle-frontend/src/state/actions/user.actions.js",["50","51","52"],"import {\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGIN_REQUEST,\n  REFRESH_TOKEN_FAILURE,\n  REFRESH_TOKEN_REQUEST,\n  REFRESH_TOKEN_SUCCESS,\n} from \"../constants/user.constants\";\n\nimport { stringify } from \"querystring\";\n\nexport function login(username, password) {\n  return (dispatch) => {\n    dispatch(request());\n    fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      body: stringify({ username, password }),\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then((res) => {\n        if (res.status === 400) throw \"Invalid Credentials.\";\n        return res.json();\n      })\n      .then((body) => {\n        dispatch(success(body));\n      })\n      .catch((e) => dispatch(failure(e)));\n  };\n\n  function request() {\n    return { type: LOGIN_REQUEST };\n  }\n\n  function success({\n    access_token: accessToken,\n    expiry: expiresOn,\n    refresh_token: refreshToken,\n  }) {\n    return { type: LOGIN_SUCCESS, accessToken, expiresOn, refreshToken };\n  }\n\n  function failure(error) {\n    return { type: LOGIN_FAILURE, error };\n  }\n}\n\nexport function refreshToken(token) {\n  return (dispatch) => {\n    dispatch(request());\n    fetch(\"http://localhost:8000/refresh_token\", {\n      method: \"POST\",\n      body: \"\",\n      headers: {\n        \"Refresh-Token\": token,\n      },\n    })\n      .then((res) => {\n        if (res.status === 400) throw \"Invalid Token.\";\n        if (res.status === 403) throw \"Expired Token.\";\n        return res.json();\n      })\n      .then((body) => {\n        dispatch(success(body));\n      })\n      .catch((e) => dispatch(failure(e)));\n  };\n\n  function request() {\n    return { type: REFRESH_TOKEN_REQUEST };\n  }\n\n  function success({\n    access_token: accessToken,\n    expiry: expiresOn,\n    refresh_token: refreshToken,\n  }) {\n    return {\n      type: REFRESH_TOKEN_SUCCESS,\n      accessToken,\n      expiresOn,\n      refreshToken,\n    };\n  }\n\n  function failure(error) {\n    return { type: REFRESH_TOKEN_FAILURE, error };\n  }\n}\n","/home/amit/Desktop/netsle-frontend/src/pages/home.js",["53","54","55","56","57"],"/home/amit/Desktop/netsle-frontend/src/pages/loadingAnimation.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":31,"column":6,"nodeType":"64","endLine":31,"endColumn":21,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":41,"column":6,"nodeType":"64","endLine":41,"endColumn":8,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":30,"column":6,"nodeType":"64","endLine":30,"endColumn":19,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":23,"column":33,"nodeType":"72","messageId":"73","endLine":23,"endColumn":62},{"ruleId":"70","severity":1,"message":"71","line":60,"column":33,"nodeType":"72","messageId":"73","endLine":60,"endColumn":56},{"ruleId":"70","severity":1,"message":"71","line":61,"column":33,"nodeType":"72","messageId":"73","endLine":61,"endColumn":56},{"ruleId":"74","severity":1,"message":"75","line":11,"column":13,"nodeType":"76","endLine":14,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":19,"column":13,"nodeType":"76","endLine":22,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":25,"column":13,"nodeType":"76","endLine":28,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":31,"column":13,"nodeType":"76","endLine":34,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":37,"column":13,"nodeType":"76","endLine":40,"endColumn":14},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'refreshAssets.accessToken', 'refreshAssets.expiresOn', and 'refreshAssets.refreshToken'. Either include them or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has missing dependencies: 'dispatch', 'isTokenExpired', 'localAccessToken', and 'localRefreshToken'. Either include them or remove the dependency array.",["80"],"React Hook useEffect has missing dependencies: 'loginAssets.accessToken', 'loginAssets.expiresOn', and 'loginAssets.refreshToken'. Either include them or remove the dependency array.",["81"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [refreshAssets.accessToken, refreshAssets.expiresOn, refreshAssets.refreshToken, refreshStatus]",{"range":"88","text":"89"},"Update the dependencies array to be: [dispatch, isTokenExpired, localAccessToken, localRefreshToken]",{"range":"90","text":"91"},"Update the dependencies array to be: [loginAssets.accessToken, loginAssets.expiresOn, loginAssets.refreshToken, loginStatus]",{"range":"92","text":"93"},[1192,1207],"[refreshAssets.accessToken, refreshAssets.expiresOn, refreshAssets.refreshToken, refreshStatus]",[1596,1598],"[dispatch, isTokenExpired, localAccessToken, localRefreshToken]",[1193,1206],"[loginAssets.accessToken, loginAssets.expiresOn, loginAssets.refreshToken, loginStatus]"]